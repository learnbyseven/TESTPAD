
Dashboard & Promethues
----------------------
//Ingress deployment changes that need to be made
//Arg section changes/Tally to enable Dashboard and promethues 
 args:
          - -nginx-plus
          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
          - -enable-prometheus-metrics
          - -report-ingress-status
          - -nginx-status-allow-cidrs=192.168.1.0/24
          - -health-status
          - -nginx-status

//Container section 
containers:
      - image: giriraj789/nginx-plus-ingress:v170
        name: nginx-plus-ingress
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: prometheus
          containerPort: 9113
        - name: dashboard
          containerPort: 8080
          hostPort: 8080
        securityContext:
          allowPrivilegeEscalation: true
          
Ingress definations
-------------------
1. Basic Conf

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: 
spec:
  tls:
  - hosts:
    - carsbikes.192.168.1.12.nip.io
    secretName: njs-secret
  rules:
  - host: carsbikes.192.168.1.12.nip.io
    http:
      paths:
      - path: /cars
        backend:
          serviceName: cars-svc
          servicePort: 80
      - path: /bikes
        backend:
          serviceName: bikes-svc
          servicePort: 80



1. Use case Redirect 

root@kubecore:~/kic# cat njs-ingress.yaml 
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: njs
  annotations:
    nginx.org/proxy-connect-timeout: "30s"
    nginx.org/proxy-read-timeout: "20s"
    nginx.org/client-max-body-size: "4m"
    nginx.org/server-snippets: |
      location / {
        return 302 /users;
      }
spec:
  rules:
  - host: njs.192.168.1.12.nip.io
    http:
      paths:
      - path: /products
        backend:
          serviceName: njs
          servicePort: 8081
      - path: /users
        backend:
          serviceName: njs
          servicePort: 8081


